#!/bin/bash

# Service Helper Functions

# Start the service locally (requires Python and Flask)
start_local() {
    echo "Starting service locally..."
    
    # Create virtual environment if it doesn't exist
    if [ ! -d "venv" ]; then
        echo "Creating virtual environment..."
        python3 -m venv venv
    fi
    
    # Activate virtual environment and install dependencies
    echo "Activating virtual environment..."
    source venv/bin/activate
    echo "Installing dependencies..."
    pip install -r service/requirements.txt
    echo "Starting application..."
    python service/app.py
}

# Build Docker image
build_docker() {
    echo "Building Docker image for service..."
    
    # Get the directory where the functions file is located
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
    
    (
        cd "$PROJECT_ROOT/service"
        docker build -t service .
    )
}

# Run Docker container
run_docker() {
    echo "Running service in Docker container..."
    docker run -p 8080:8080 service
}

# Build and run Docker container in one step
docker_up() {
    echo "Building and running service with Docker..."
    build_docker && run_docker
}

# Stop Docker container
stop_docker() {
    echo "Stopping service Docker container..."
    docker stop $(docker ps -q --filter "ancestor=service")
}

# Start services with Docker Compose (includes Redis)
compose_up() {
    echo "Starting services with Docker Compose (Flask + Redis)..."
    
    # Get the directory where the functions file is located
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
    
    (
        cd "$PROJECT_ROOT"
        docker-compose up --build
    )
}

# Stop Docker Compose services
compose_down() {
    echo "Stopping Docker Compose services..."
    
    # Get the directory where the functions file is located
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
    
    (
        cd "$PROJECT_ROOT"
        docker-compose down
    )
}

# Start services with Docker Compose in background
compose_up_bg() {
    echo "Starting services with Docker Compose in background..."
    
    # Get the directory where the functions file is located
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
    
    (
        cd "$PROJECT_ROOT"
        docker-compose up --build -d
    )
}

# Show help
help() {
    echo "Service Functions:"
    echo "  start_local    - Start service locally with Python (no Redis stats)"
    echo "  build_docker   - Build Docker image"
    echo "  run_docker     - Run Docker container"
    echo "  docker_up      - Build and run Docker container"
    echo "  stop_docker    - Stop Docker container"
    echo "  compose_up     - Start Flask + Redis with Docker Compose"
    echo "  compose_down   - Stop Docker Compose services"
    echo "  compose_up_bg  - Start Flask + Redis with Docker Compose in background"
    echo "  help           - Show this help"
}

# If script is called directly, show help
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    help
fi